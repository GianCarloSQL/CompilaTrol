package Interface;

public interface ParserConstants
{
    int START_SYMBOL = 43;

    int FIRST_NON_TERMINAL    = 43;
    int FIRST_SEMANTIC_ACTION = 71;

    int[][] PARSER_TABLE =
    {
        { -1,  0, -1, -1, -1, -1, -1, -1,  0, -1, -1,  0, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        {  3,  2, -1, -1, -1, -1, -1, -1,  2,  3,  3,  2, -1, -1,  2,  3, -1, -1, -1, -1, -1, -1,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  4, -1, -1, -1, -1, -1, -1,  6, -1, -1,  7, -1, -1,  7, -1, -1, -1, -1, -1, -1, -1,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  8,  9, 10 },
        { -1, 11, 11, 11, 11, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, 11, 11, 12, 12, 12, 12, -1, 11, -1, -1, -1, -1, -1, -1, -1, 11, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, 14, 14, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, 18, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 21, 21, 21, 21, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, 21, 21, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, 21, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 33, 33, 33, 33, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, 33, 33, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 33, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { 36, 36, -1, -1, -1, 34, 35, -1, 36, 36, 36, 36, -1, -1, 36, 36, -1, -1, -1, -1, -1, -1, 36, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, 36, -1, -1, -1 },
        { -1, 37, 37, 37, 37, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, 39, 38, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, 37, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 41, 41, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { 43, 43, -1, -1, -1, 43, 43, -1, 43, 43, 43, 43, -1, -1, 43, 43, -1, -1, -1, -1, -1, -1, 43, -1, 43, 42, 42, 42, 42, 42, 42, -1, -1, -1, -1, -1, -1, 43, 43, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 45, 46, 47, 48, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 50, 50, 50, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1, -1, -1, -1, -1, -1, 50, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { 53, 53, -1, -1, -1, 53, 53, -1, 53, 53, 53, 53, -1, -1, 53, 53, -1, -1, -1, -1, -1, -1, 53, -1, 53, 53, 53, 53, 53, 53, 53, 51, 52, -1, -1, -1, -1, 53, 53, -1, -1, -1 },
        { -1, 54, 54, 54, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, -1, -1, 54, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { 59, 59, -1, -1, -1, 59, 59, -1, 59, 59, 59, 59, -1, -1, 59, 59, -1, -1, -1, -1, -1, -1, 59, -1, 59, 59, 59, 59, 59, 59, 59, 59, 59, 55, 56, 57, 58, 59, 59, -1, -1, -1 },
        { -1, 60, 61, 62, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, -1, 65, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        { 44 },
        { 46, 45 },
        { 44 },
        {  0 },
        {  2, 47 },
        { 52 },
        { 55 },
        { 58 },
        { 40, 48 },
        { 41, 60 },
        { 42, 60 },
        { 60 },
        { 49 },
        { 19, 24, 50, 25 },
        { 51, 24, 19, 24, 50, 25, 25 },
        {  5 },
        {  0 },
        { 20 },
        { 21 },
        { 22 },
        { 23, 24, 53, 25 },
        { 60, 54 },
        { 38, 53 },
        {  0 },
        {  9, 60, 39, 44, 56, 57, 16 },
        { 10, 60, 39, 44, 56 },
        {  0 },
        { 11, 39, 44 },
        {  0 },
        { 15, 60, 39, 44, 16 },
        { 12,  2, 13, 59 },
        { 14, 24, 60, 25, 39, 44, 16 },
        {  2, 39, 44, 16 },
        { 62, 61 },
        {  6, 62, 61 },
        {  7, 62, 61 },
        {  0 },
        { 63 },
        { 18 },
        { 17 },
        {  8, 62 },
        { 66, 64 },
        { 65, 66 },
        {  0 },
        { 26 },
        { 27 },
        { 28 },
        { 29 },
        { 30 },
        { 31 },
        { 68, 67 },
        { 32, 68, 67 },
        { 33, 68, 67 },
        {  0 },
        { 70, 69 },
        { 34, 70, 69 },
        { 35, 70, 69 },
        { 36, 70, 69 },
        { 37, 70, 69 },
        {  0 },
        {  2 },
        {  3 },
        {  4 },
        {  5 },
        { 24, 60, 25 },
        { 32, 70 },
        { 33, 70 }
    };

    String[] PARSER_ERROR =
    {
        "",                                                 
        "fim de programa", //"Era esperado fim de programa",
        "id", //Era esperado id", 
        "int", //"Era esperado cint", 
        "float", //"Era esperado cfloat",
        "str", //"Era esperado cstr",
        "and", //"Era esperado and",
        "or", //"Era esperado or",
        "not", //"Era esperado not",
        "if", //"Era esperado if",
        "elif", //"Era esperado elif",
        "else", //"Era esperado else",
        "for", //"Era esperado for",
        "in", //"Era esperado in",
        "range", //"Era esperado range",
        "while", //"Era esperado while",
        "end", //"Era esperado end",
        "false", //"Era esperado false",
        "true", //"Era esperado true",
        "input", //"Era esperado input",
        "int", //"Era esperado int",
        "float", //"Era esperado float",
        "str", //"Era esperado str",
        "print", //"Era esperado print",
        "(", //"Era esperado \"(\"",
        ")", //"Era esperado \")\"",
        "==", //"Era esperado \"==\"",
        "!=", //"Era esperado \"!=\"",
        "<", //"Era esperado \"<\"",
        "<=", //"Era esperado \"<=\"",
        ">", //"Era esperado \">\"",
        ">=", //"Era esperado \">=\"",
        "+", //"Era esperado \"+\"",
        "-", //"Era esperado \"-\"",
        "*", //"Era esperado \"*\"",
        "/", //"Era esperado \"/\"",
        "//", //"Era esperado \"//\"",
        "&", //"Era esperado \"%\"",
        ",", //"Era esperado \",\"",
        ":", //"Era esperado \":\"",
        "=", //"Era esperado \"=\"",
        "+=", //"Era esperado \"+=\"",
        "-=", //"Era esperado \"-=\"",
        "<programa> inv�lido",
        "<lista_comandos> inv�lido",
        "<lista_comandos1> inv�lido",
        "<comando> inv�lido",
        "<comando1> inv�lido",
        "<comando2> inv�lido",
        "<entrada_dados1> inv�lido",
        "<entrada> inv�lido",
        "<tipo> inv�lido",
        "<saida_dados> inv�lido",
        "<lista_expressoes> inv�lido",
        "<lista_expressoes1> inv�lido",
        "<selecao> inv�lido",
        "<senao_se> inv�lido",
        "<senao> inv�lido",
        "<repeticao> inv�lido",
        "<repeticao1> inv�lido",
        "<expressao> inv�lido",
        "<expressao_> inv�lido",
        "<elemento> inv�lido",
        "<relacional> inv�lido",
        "<relacional1> inv�lido",
        "<operador_relacional> inv�lido",
        "<aritmetica> inv�lido",
        "<aritmetica_> inv�lido",
        "<termo> inv�lido",
        "<termo_> inv�lido",
        "<fator> inv�lido"
    };
}
